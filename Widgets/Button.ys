#pragma once

#include "Widget.ys"

Button = function (_parent, _x, _y)
{
    var _down = false;
    var _highlight
    
    this.Render = function (ctx, time, force)
    {
        //console.log('render');
        if (force)
        {
            if (_down)
            {
                this.RenderDown(ctx, time);
            }
            else
            {
                this.RenderUp(ctx, time);
            }
        }
    };
    
    this.On = function (what, x, y, event)
    {
        // Need mouse-out events to cancel a click.
        switch (what)
        {
            /*case 'mousedown':
                if (!_down)
                {
                    _down = true;
                    this.Dirty();
                }
                break;
            case 'mouseup':
                if (_down)
                {
                    _down = false;
                    this.Dirty();
                    this.Click(event);
                }
                break;*/
            case 'click':
                //console.log('x: ' + x + ', y: ' + y);
                break;
        }
        return true;
    };
    
    this.super(_parent, _x, _y);
    return this;
}

Inherit(Button, Widget);
// Object.specify(Button, new Interface(['RenderDown', 'RenderUp', 'Click']));
Interface(Button, ['RenderDown', 'RenderUp', 'Click']);

